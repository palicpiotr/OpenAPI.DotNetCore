<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Swagger.OpenAPI</name>
    </assembly>
    <members>
        <member name="T:Swagger.OpenAPI.Attributes.HideInDocsAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:Swagger.OpenAPI.Attributes.ValidateModelStateAttribute">
            <summary>
            Model state validation attribute
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Swagger.OpenAPI.Controllers.PetApiController">
            <summary>
            Pet API
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Controllers.PetApiController.AddPet(Swagger.OpenAPI.Models.Pet)">
            <summary>
            Add a new pet to the store
            </summary>
            <param name="body">Pet object that needs to be added to the store</param>
            <response code="405">Invalid input</response>
        </member>
        <member name="M:Swagger.OpenAPI.Controllers.PetApiController.DeletePet(System.Nullable{System.Int64},System.String)">
            <summary>
            Deletes a pet
            </summary>
            <param name="petId">Pet id to delete</param>
            <param name="apiKey"></param>
            <response code="400">Invalid pet value</response>
        </member>
        <member name="M:Swagger.OpenAPI.Controllers.PetApiController.FindPetsByStatus(System.Collections.Generic.List{System.String})">
            <summary>
            Finds Pets by status
            </summary>
            <remarks>Multiple status values can be provided with comma separated strings</remarks>
            <param name="status">Status values that need to be considered for filter</param>
            <response code="200">successful operation</response>
            <response code="400">Invalid status value</response>
        </member>
        <member name="M:Swagger.OpenAPI.Controllers.PetApiController.FindPetsByTags(System.Collections.Generic.List{System.String})">
            <summary>
            Finds Pets by tags
            </summary>
            <remarks>Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.</remarks>
            <param name="tags">Tags to filter by</param>
            <response code="200">successful operation</response>
            <response code="400">Invalid tag value</response>
        </member>
        <member name="M:Swagger.OpenAPI.Controllers.PetApiController.GetPetById(System.Nullable{System.Int64})">
            <summary>
            Find pet by ID
            </summary>
            <remarks>Returns a single pet</remarks>
            <param name="petId">ID of pet to return</param>
            <response code="200">successful operation</response>
            <response code="400">Invalid ID supplied</response>
            <response code="404">Pet not found</response>
        </member>
        <member name="M:Swagger.OpenAPI.Controllers.PetApiController.UpdatePet(Swagger.OpenAPI.Models.Pet)">
            <summary>
            Update an existing pet
            </summary>
            <param name="body">Pet object that needs to be added to the store</param>
            <response code="400">Invalid ID supplied</response>
            <response code="404">Pet not found</response>
            <response code="405">Validation exception</response>
        </member>
        <member name="M:Swagger.OpenAPI.Controllers.PetApiController.UpdatePetWithForm(System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Updates a pet in the store with form data
            </summary>
            <param name="petId">ID of pet that needs to be updated</param>
            <param name="name">Updated name of the pet</param>
            <param name="status">Updated status of the pet</param>
            <response code="405">Invalid input</response>
        </member>
        <member name="M:Swagger.OpenAPI.Controllers.PetApiController.UploadFile(System.Nullable{System.Int64},System.String,System.IO.Stream)">
            <summary>
            uploads an image
            </summary>
            <param name="petId">ID of pet to update</param>
            <param name="additionalMetadata">Additional data to pass to server</param>
            <param name="file">file to upload</param>
            <response code="200">successful operation</response>
        </member>
        <member name="T:Swagger.OpenAPI.Filters.BasePathFilter">
            <summary>
            BasePath Document Filter sets BasePath property of Swagger and removes it from the individual URL paths
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Filters.BasePathFilter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="basePath">BasePath to remove from Operations</param>
        </member>
        <member name="P:Swagger.OpenAPI.Filters.BasePathFilter.BasePath">
            <summary>
            Gets the BasePath of the Swagger Doc
            </summary>
            <returns>The BasePath of the Swagger Doc</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Filters.BasePathFilter.Apply(Swashbuckle.AspNetCore.Swagger.SwaggerDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Apply the filter
            </summary>
            <param name="swaggerDoc">SwaggerDocument</param>
            <param name="context">FilterContext</param>
        </member>
        <member name="T:Swagger.OpenAPI.Filters.GeneratePathParamsValidationFilter">
            <summary>
            Path Parameter Validation Rules Filter
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Filters.GeneratePathParamsValidationFilter.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Constructor
            </summary>
            <param name="operation">Operation</param>
            <param name="context">OperationFilterContext</param>
        </member>
        <member name="T:Swagger.OpenAPI.Filters.HideGetVerbInDocsFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Filters.HideGetVerbInDocsFilter.Apply(Swashbuckle.AspNetCore.Swagger.SwaggerDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            
            </summary>
            <param name="swaggerDoc"></param>
            <param name="context"></param>
        </member>
        <member name="T:Swagger.OpenAPI.Models.Amount">
            <summary>
            some description 
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Amount.Value">
            <summary>
            some description 
            </summary>
            <value>some description </value>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Amount.Currency">
            <summary>
            Gets or Sets Currency
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Amount.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Amount.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Amount.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Amount.Equals(Swagger.OpenAPI.Models.Amount)">
            <summary>
            Returns true if Amount instances are equal
            </summary>
            <param name="other">Instance of Amount to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Amount.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Swagger.OpenAPI.Models.ApiResponse">
            <summary>
            Describes the result of uploading an image resource
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.ApiResponse.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.ApiResponse.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.ApiResponse.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Models.ApiResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.ApiResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.ApiResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.ApiResponse.Equals(Swagger.OpenAPI.Models.ApiResponse)">
            <summary>
            Returns true if ApiResponse instances are equal
            </summary>
            <param name="other">Instance of ApiResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.ApiResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Swagger.OpenAPI.Models.Category">
            <summary>
            A category for a pet
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Category.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Category.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Category.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Category.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Category.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Category.Equals(Swagger.OpenAPI.Models.Category)">
            <summary>
            Returns true if Category instances are equal
            </summary>
            <param name="other">Instance of Category to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Category.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Swagger.OpenAPI.Models.Currency">
            <summary>
            some description 
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Currency.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Currency.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Currency.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Currency.Equals(Swagger.OpenAPI.Models.Currency)">
            <summary>
            Returns true if Currency instances are equal
            </summary>
            <param name="other">Instance of Currency to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Currency.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Swagger.OpenAPI.Models.Order">
            <summary>
            An order for a pets from the pet store
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Order.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Order.PetId">
            <summary>
            Gets or Sets PetId
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Order.Quantity">
            <summary>
            Gets or Sets Quantity
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Order.ShipDate">
            <summary>
            Gets or Sets ShipDate
            </summary>
        </member>
        <member name="T:Swagger.OpenAPI.Models.Order.StatusEnum">
            <summary>
            Order Status
            </summary>
            <value>Order Status</value>
        </member>
        <member name="F:Swagger.OpenAPI.Models.Order.StatusEnum.PlacedEnum">
            <summary>
            Enum PlacedEnum for placed
            </summary>
        </member>
        <member name="F:Swagger.OpenAPI.Models.Order.StatusEnum.ApprovedEnum">
            <summary>
            Enum ApprovedEnum for approved
            </summary>
        </member>
        <member name="F:Swagger.OpenAPI.Models.Order.StatusEnum.DeliveredEnum">
            <summary>
            Enum DeliveredEnum for delivered
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Order.Status">
            <summary>
            Order Status
            </summary>
            <value>Order Status</value>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Order.Complete">
            <summary>
            Gets or Sets Complete
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Order.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Order.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Order.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Order.Equals(Swagger.OpenAPI.Models.Order)">
            <summary>
            Returns true if Order instances are equal
            </summary>
            <param name="other">Instance of Order to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Order.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Swagger.OpenAPI.Models.Pet">
            <summary>
            A pet for sale in the pet store
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Pet.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Pet.Category">
            <summary>
            Gets or Sets Category
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Pet.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Pet.PhotoUrls">
            <summary>
            Gets or Sets PhotoUrls
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Pet.Tags">
            <summary>
            Gets or Sets Tags
            </summary>
        </member>
        <member name="T:Swagger.OpenAPI.Models.Pet.StatusEnum">
            <summary>
            pet status in the store
            </summary>
            <value>pet status in the store</value>
        </member>
        <member name="F:Swagger.OpenAPI.Models.Pet.StatusEnum.AvailableEnum">
            <summary>
            Enum AvailableEnum for available
            </summary>
        </member>
        <member name="F:Swagger.OpenAPI.Models.Pet.StatusEnum.PendingEnum">
            <summary>
            Enum PendingEnum for pending
            </summary>
        </member>
        <member name="F:Swagger.OpenAPI.Models.Pet.StatusEnum.SoldEnum">
            <summary>
            Enum SoldEnum for sold
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Pet.Status">
            <summary>
            pet status in the store
            </summary>
            <value>pet status in the store</value>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Pet.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Pet.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Pet.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Pet.Equals(Swagger.OpenAPI.Models.Pet)">
            <summary>
            Returns true if Pet instances are equal
            </summary>
            <param name="other">Instance of Pet to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Pet.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Swagger.OpenAPI.Models.Tag">
            <summary>
            A tag for a pet
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Tag.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.Tag.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Tag.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Tag.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Tag.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Tag.Equals(Swagger.OpenAPI.Models.Tag)">
            <summary>
            Returns true if Tag instances are equal
            </summary>
            <param name="other">Instance of Tag to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.Tag.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Swagger.OpenAPI.Models.User">
            <summary>
            A User who is purchasing from the pet store
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.User.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.User.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.User.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.User.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.User.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.User.Password">
            <summary>
            Gets or Sets Password
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.User.Phone">
            <summary>
            Gets or Sets Phone
            </summary>
        </member>
        <member name="P:Swagger.OpenAPI.Models.User.UserStatus">
            <summary>
            User Status
            </summary>
            <value>User Status</value>
        </member>
        <member name="M:Swagger.OpenAPI.Models.User.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.User.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.User.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.User.Equals(Swagger.OpenAPI.Models.User)">
            <summary>
            Returns true if User instances are equal
            </summary>
            <param name="other">Instance of User to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Swagger.OpenAPI.Models.User.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Swagger.OpenAPI.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Swagger.OpenAPI.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Swagger.OpenAPI.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:Swagger.OpenAPI.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="env"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Swagger.OpenAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Swagger.OpenAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="T:IO.Swagger.Controllers.StoreApiController">
            <summary>
            Store API
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.StoreApiController.DeleteOrder(System.String)">
            <summary>
            Delete purchase order by ID
            </summary>
            <remarks>For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors</remarks>
            <param name="orderId">ID of the order that needs to be deleted</param>
            <response code="400">Invalid ID supplied</response>
            <response code="404">Order not found</response>
        </member>
        <member name="M:IO.Swagger.Controllers.StoreApiController.GetInventory">
            <summary>
            Returns pet inventories by status
            </summary>
            <remarks>Returns a map of status codes to quantities</remarks>
            <response code="200">successful operation</response>
        </member>
        <member name="M:IO.Swagger.Controllers.StoreApiController.GetOrderById(System.Nullable{System.Int64})">
            <summary>
            Find purchase order by ID
            </summary>
            <remarks>For valid response try integer IDs with value &lt;&#x3D; 5 or &gt; 10. Other values will generated exceptions</remarks>
            <param name="orderId">ID of pet that needs to be fetched</param>
            <response code="200">successful operation</response>
            <response code="400">Invalid ID supplied</response>
            <response code="404">Order not found</response>
        </member>
        <member name="M:IO.Swagger.Controllers.StoreApiController.PlaceOrder(StackExchange.Redis.Order)">
            <summary>
            Place an order for a pet
            </summary>
            <param name="body">order placed for purchasing the pet</param>
            <response code="200">successful operation</response>
            <response code="400">Invalid Order</response>
        </member>
        <member name="T:IO.Swagger.Controllers.UserApiController">
            <summary>
            User API
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.UserApiController.CreateUser(Swagger.OpenAPI.Models.User)">
            <summary>
            Create user
            </summary>
            <remarks>This can only be done by the logged in user.</remarks>
            <param name="body">Created user object</param>
            <response code="0">successful operation</response>
        </member>
        <member name="M:IO.Swagger.Controllers.UserApiController.CreateUsersWithArrayInput(System.Collections.Generic.List{Swagger.OpenAPI.Models.User})">
            <summary>
            Creates list of users with given input array
            </summary>
            <param name="body">List of user object</param>
            <response code="0">successful operation</response>
        </member>
        <member name="M:IO.Swagger.Controllers.UserApiController.CreateUsersWithListInput(System.Collections.Generic.List{Swagger.OpenAPI.Models.User})">
            <summary>
            Creates list of users with given input array
            </summary>
            <param name="body">List of user object</param>
            <response code="0">successful operation</response>
        </member>
        <member name="M:IO.Swagger.Controllers.UserApiController.DeleteUser(System.String)">
            <summary>
            Delete user
            </summary>
            <remarks>This can only be done by the logged in user.</remarks>
            <param name="username">The name that needs to be deleted</param>
            <response code="400">Invalid username supplied</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:IO.Swagger.Controllers.UserApiController.GetUserByName(System.String)">
            <summary>
            Get user by user name
            </summary>
            <param name="username">The name that needs to be fetched. Use user1 for testing.</param>
            <response code="200">successful operation</response>
            <response code="400">Invalid username supplied</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:IO.Swagger.Controllers.UserApiController.LoginUser(System.String,System.String,System.String)">
            <summary>
            Logs user into the system
            </summary>
            <param name="username">The user name for login</param>
            <param name="password">The password for login in clear text</param>
            <param name="parameter">This parameter can be null</param>
            <response code="200">successful operation</response>
            <response code="400">Invalid username/password supplied</response>
        </member>
        <member name="M:IO.Swagger.Controllers.UserApiController.LogoutUser">
            <summary>
            Logs out current logged in user session
            </summary>
            <response code="0">successful operation</response>
        </member>
        <member name="M:IO.Swagger.Controllers.UserApiController.UpdateUser(System.String,Swagger.OpenAPI.Models.User)">
            <summary>
            Updated user
            </summary>
            <remarks>This can only be done by the logged in user.</remarks>
            <param name="username">name that need to be deleted</param>
            <param name="body">Updated user object</param>
            <response code="400">Invalid user supplied</response>
            <response code="404">User not found</response>        
        </member>
    </members>
</doc>
